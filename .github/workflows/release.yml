name: Release Build

on:
  push:
    tags:
      - 'v*'

env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: FightingGameStarter

jobs:
  release:
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        lfs: true
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
    
    - name: Setup Godot templates
      run: |
        mkdir -v -p ~/.local/share/godot/templates
        godot -e -q --headless
    
    - name: Build C# project
      run: |
        godot --headless --build-solutions --quit
    
    - name: Export for all platforms
      run: |
        mkdir -v -p build/linux build/windows build/macos
        godot -v --export-release "Linux/X11" build/linux/$EXPORT_NAME.x86_64 --headless
        godot -v --export-release "Windows Desktop" build/windows/$EXPORT_NAME.exe --headless  
        godot -v --export-release "macOS" build/macos/$EXPORT_NAME.zip --headless
    
    - name: Create release archives
      run: |
        cd build
        zip -r $EXPORT_NAME-linux.zip linux/
        zip -r $EXPORT_NAME-windows.zip windows/
        zip -r $EXPORT_NAME-macos.zip macos/
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Fighting Game Starter ${{ github.ref }}
        body: |
          ## What's New
          
          * New features and improvements
          * Bug fixes and optimizations
          * Character balance updates
          
          ## Downloads
          
          Choose the appropriate version for your platform:
          
          * **Windows**: Download the Windows build
          * **macOS**: Download the macOS build  
          * **Linux**: Download the Linux build
          * **Steam Deck**: Use the Linux build
          
          ## Installation
          
          1. Download the appropriate build for your platform
          2. Extract the archive
          3. Run the executable
          
          For detailed instructions, see the [README](README.md).
        draft: false
        prerelease: false
    
    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/${{ env.EXPORT_NAME }}-linux.zip
        asset_name: ${{ env.EXPORT_NAME }}-linux.zip
        asset_content_type: application/zip
    
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/${{ env.EXPORT_NAME }}-windows.zip
        asset_name: ${{ env.EXPORT_NAME }}-windows.zip
        asset_content_type: application/zip
    
    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/${{ env.EXPORT_NAME }}-macos.zip
        asset_name: ${{ env.EXPORT_NAME }}-macos.zip
        asset_content_type: application/zip