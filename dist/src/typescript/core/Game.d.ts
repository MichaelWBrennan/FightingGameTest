import { GameState, GameMode } from '../../../types/core';
export declare class GameManager {
    private gameState;
    private inputManager;
    private graphicsManager;
    private soundManager;
    private effectManager;
    private playerManager;
    constructor();
    gameTask(): void;
    private game;
    private game00;
    private game0_0;
    private game0_1;
    private game0_2;
    private game01;
    private game02;
    private waitAutoLoad;
    private loopDemo;
    private game2_0;
    private game2_1;
    private game2_2;
    private game2_3;
    private game2_4;
    private game2_5;
    private game2_6;
    private game2_7;
    private game03;
    private game04;
    private game05;
    private game06;
    private game07;
    private game08;
    private game09;
    private game10;
    private game11;
    private game12;
    private initColorTransReq;
    private getSysFF;
    private initTexcashBeforeProcess;
    private seqsBeforeProcess;
    private nowSoftReset;
    private seqsAfterProcess;
    private textureHashUpdate;
    private movePulpulWork;
    private checkOffVib;
    private checkLDREQQueue;
    private checkScreen;
    private checkPosBG;
    private dispSoundCode;
    private titleAtADash;
    private dispCopyright;
    private titleMove;
    private switchScreenInit;
    private switchScreen;
    private fadeOut;
    private texRelease;
    private setTitleTexFlag;
    private purgeMmtmArea;
    private makeTexcashOfList;
    private readyMenuTask;
    private basicSub;
    private setupPlayType;
    private initSelectNoValues;
    private initGameSettings;
    private selectPlayer;
    private setBonusGameFlag;
    private game01Sub;
    private setAppearType;
    private setHitmarkColor;
    private handleDebugCharacters;
    private purgeTexcashOfList;
    private handleDemoTransition;
    private setSceneCut;
    private checkCoin;
    private nextTitleSub;
    private initDemoState;
    private capcomLogo;
    private loopDemoSub;
    private setInsertY;
    private setETimer;
    private title;
    getGameState(): GameState;
    setGameMode(mode: GameMode): void;
}
//# sourceMappingURL=Game.d.ts.map